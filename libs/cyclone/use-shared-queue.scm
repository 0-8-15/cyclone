;; Example of multiple threads using a shared queue 
(import
  (scheme base)
  (scheme write)
  (shared-queue)
  (srfi 18)
  (cyclone concurrent))

(define q (make-queue))
(define (consume)
  (%consume)
  (%consume))
(define (%consume)
  (let ((val (queue-remove! q)))
    (if (procedure? val)
      (set! val (val)))
    (write `(removed ,val ,(current-thread)))
    (newline)
    (thread-sleep! 1))
)
(define t1 (make-thread consume))
(define t2 (make-thread consume))

(thread-start! t1)
(thread-start! t2)

(thread-sleep! 1)
(queue-add! q 'a)
(queue-add! q (lambda () (+ 1 2 3)))
(queue-add! q 'c)
(queue-add! q 'd)
(queue-add! q 'e)

(thread-join! t1)
(thread-join! t2)
(write "done")

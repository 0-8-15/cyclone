Initiatives:

Tier 0:
- Performance
  1) Can we replace alists in any places with hashtables? Will want to measure any improvements obtained this way

Tier 1:
- pass larceny benchmarks (will require some bugfixes):

  benchmarks that do not finish due to
  missing features:
    - gcbench.scm - Needed to manually import (srfi 9)
    - mbrotZ.scm - No complex library
    - read0.scm - needs open-input-string
    - scheme.scm - Problem with (macro?) being a primitive and defined in application code
    - slatex.scm - Need to handle more than one "args" argument to apply
  crashes:
    - compiler.scm - Needs to be able to dynamically grow symbol table. needed to hardcode symbol table to 20x its size to be able to generate the C file. Then C file cannot compile; there may be issues with defining functions with the same name as a primitive.

Tier 2:
- srfi 18 - more complex threading examples (probably can wait)
- api documentation (can wait?)
- higher priority issues (need to be resolved, but can wait?)
  - revisit macro hygiene issues
